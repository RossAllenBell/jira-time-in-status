MinimumNForSummaryOutput = 10

CycleTimeIssueTypes = [
  'production defect',
  'spike',
  'story',
  'task',
]

CycleTimeIgnoredIssueTypes = [
  'bug',
  'epic',
  'initiative',
  'portfolio',
  'sub-task',
  'subtask',
  'vulnerability',
]

raise("Overlapping issue types: #{(CycleTimeIssueTypes & CycleTimeIgnoredIssueTypes).join(', ')}") if (CycleTimeIssueTypes & CycleTimeIgnoredIssueTypes).any?

AllIssueTypes = CycleTimeIssueTypes + CycleTimeIgnoredIssueTypes

CycleTimeTerminalIssueStatuses = [
  'code merged',
  'completed',
  'deployed',
  'deployed/completed',
  'done',
  'merged',
  'pending production deployment',
  'update complete',
]

CycleTimeNotTerminalIssueStatuses = [
  'abandoned in development',
  'abandoned',
  'architecture brief in-progress',
  'assigned for work',
  'assigned to domain team',
  'assigned',
  'backlog (accounting)',
  'backlog',
  'bi discovery',
  'blocked',
  'canceled',
  'cancelled',
  'code review',
  'data qa in dev',
  'discovery',
  'engineer testing',
  'gathering requirements',
  'hold',
  'in design',
  'in dev test',
  'in development',
  'in progress',
  'in review',
  'in tech refinement',
  'in test',
  'in validation',
  'investigations',
  'logged in airbase',
  'needs review',
  'new request',
  'new software team request',
  'new',
  'on hold',
  'on-hold',
  'open',
  'prod backlog',
  'product backlog',
  'product brief',
  'pull request submitted',
  'ready for development',
  'ready for discovery',
  'ready for execution',
  'ready for external share',
  'ready for finalization',
  'ready for qe',
  'ready for test',
  'ready for test/ review complet',
  'ready for test/review complete',
  'ready to begin',
  'ready to review',
  'ready',
  'refined',
  'request created',
  'review',
  'rework',
  'scoping',
  'seen',
  'selected for development',
  'stale/abandoned',
  'test done',
  'test plan in progress',
  'tickets ready for team',
  'to do',
  'to test',
  'triage',
  'up next',
  'user acceptance testing (uat)',
  'validation',
  'verifed',
  'verified',
  'waiting for approval',
  'waiting for support',
  'waiting on user confirmation',
  "won't do",
  'work requests',
]

raise("Overlapping terminal issue statuses: #{(CycleTimeTerminalIssueStatuses & CycleTimeNotTerminalIssueStatuses).join(', ')}") if (CycleTimeTerminalIssueStatuses & CycleTimeNotTerminalIssueStatuses).any?

AllIssueStatuses = CycleTimeTerminalIssueStatuses + CycleTimeNotTerminalIssueStatuses

CycleTimeInFlightIssueStatuses = [
  'code review',
  'data qa in dev',
  'engineer testing',
  'in dev test',
  'in development',
  'in progress',
  'in review',
  'in test',
  'in validation',
  'needs review',
  'pull request submitted',
  'ready for qe',
  'ready for test',
  'ready for test/ review complet',
  'ready for test/review complete',
  'ready to review',
  'review',
  'rework',
  'test done',
  'to test',
  'user acceptance testing (uat)',
  'validation',
  'verifed',
  'verified',
  'waiting on user confirmation',
]

CycleTimeNotInFlightIssueStatuses = [
  'abandoned in development',
  'abandoned',
  'architecture brief in-progress',
  'assigned for work',
  'assigned to domain team',
  'assigned',
  'backlog (accounting)',
  'backlog',
  'bi discovery',
  'blocked',
  'canceled',
  'cancelled',
  'code merged',
  'completed',
  'deployed',
  'deployed/completed',
  'discovery',
  'done',
  'gathering requirements',
  'hold',
  'in design',
  'in tech refinement',
  'investigations',
  'logged in airbase',
  'merged',
  'new request',
  'new software team request',
  'new',
  'on hold',
  'on-hold',
  'open',
  'pending production deployment',
  'prod backlog',
  'product backlog',
  'product brief',
  'ready for development',
  'ready for discovery',
  'ready for execution',
  'ready for external share',
  'ready for finalization',
  'ready to begin',
  'ready',
  'refined',
  'request created',
  'scoping',
  'seen',
  'selected for development',
  'stale/abandoned',
  'test plan in progress',
  'tickets ready for team',
  'to do',
  'triage',
  'up next',
  'update complete',
  'waiting for approval',
  'waiting for support',
  "won't do",
  'work requests',
]

raise("Overlapping in-flight issue statuses: #{(CycleTimeInFlightIssueStatuses & CycleTimeNotInFlightIssueStatuses).join(', ')}") if (CycleTimeInFlightIssueStatuses & CycleTimeNotInFlightIssueStatuses).any?

# puts (AllIssueStatuses - (CycleTimeInFlightIssueStatuses + CycleTimeNotInFlightIssueStatuses)).join(', ')
# puts ((CycleTimeInFlightIssueStatuses + CycleTimeNotInFlightIssueStatuses) - AllIssueStatuses).join(', ')
raise('Inconsistent terminal issue statuses vs in-flight issue statuses') if (AllIssueStatuses - (CycleTimeInFlightIssueStatuses + CycleTimeNotInFlightIssueStatuses)).any? || ((CycleTimeInFlightIssueStatuses + CycleTimeNotInFlightIssueStatuses) - AllIssueStatuses).any?
